@mixin setTransition {
  -webkit-transition: all 0.2s ease-in-out;
  -moz-transition: all 0.2s ease-in-out;
  -ms-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}

@mixin font-size($sizeValue: 1.3){
  $sizeValue1: ($sizeValue * 10) + px;
  $plop: ($sizeValue * 10);
  font-size: $sizeValue; // rem未対応ブラウザのfallback
  font-size: rem-calc($plop);
}
@mixin line-height($sizeValue: 1.3){
  line-height: ($sizeValue * 10) + px; // rem未対応ブラウザのfallback
  line-height: $sizeValue + rem;
}
@mixin letter-spacing($sizeValue: .08){
  letter-spacing: ($sizeValue * 10) + px; // rem未対応ブラウザのfallback
  letter-spacing: $sizeValue + rem;
}

@mixin border-radius($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
}
@mixin box-sizing($type)
 {
   -webkit-box-sizing:$type;
   -moz-box-sizing:$type;
   box-sizing:$type;
 }
@mixin opacity($opacity) {
     opacity: $opacity;
    filter: alpha(opacity=($opacity * 100));
 }
 @mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -o-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

/*
 * Reset
 */
body {
  letter-spacing: 0.05em;
  margin-top: 0;
}

a, a:hover, a:active, a:focus { outline: 0; }

/* layout style ▼
-------------------------------- */
.page_wrapper {
  padding: 0 10px;

  @media screen and #{breakpoint(xmedium)} {
    padding: 0 20px;
  }
}

/* placeholders style ▼
-------------------------------- */
%boxTitle {
    margin: 0;
    // background-color: $color-theme-main;
    // color: #fff;
    // border: none;
    color: #000;
    @include font-size(1.8);
    @include border-radius(4px 4px 0 0);
}
